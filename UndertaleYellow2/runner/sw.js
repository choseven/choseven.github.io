const GAME_NAME = "Undertale_Yellow";
const GAME_VERSION = "1.0.0.0";

const CACHE_NAME = JSON.stringify({"name": GAME_NAME, "version": GAME_VERSION});
const CACHE_FILES = ["runner.data",
"runner.js",
"runner.wasm",
"audio-worklet.js",
"abandoned.ogg",
"acquittal.ogg",
"after_hours.ogg",
"ajourned.ogg",
"ambient_river.ogg",
"apex.ogg",
"apprehension_yellow.ogg",
"asgoreop.ogg",
"aviation.ogg",
"axis_chase.ogg",
"axis_flashlight.ogg",
"a_call_to_action.ogg",
"a_new_partner.ogg",
"a_place_to_rest.ogg",
"bailador_overworld.ogg",
"barrier.ogg",
"battle_snowdin.ogg",
"birdnoise.ogg",
"birdsofafeather.ogg",
"blossom.ogg",
"build_a_bot.ogg",
"cafe.ogg",
"cafe_arcade.ogg",
"card_game.ogg",
"change_of_plans.ogg",
"clover_jump_dunes.ogg",
"complex.ogg",
"computer_ambience.ogg",
"coolestcave.ogg",
"corner_of_a_circle.ogg",
"credits.ogg",
"crescendo_of_dread.ogg",
"cymbal.ogg",
"dalvbattle_yellow.ogg",
"dalventertainer.ogg",
"dalvopening_yellow.ogg",
"dalv_diary.ogg",
"danza_attack_01_yellow.ogg",
"danza_attack_02_yellow.ogg",
"danza_attack_03_yellow.ogg",
"danza_attack_04_yellow.ogg",
"danza_attack_05_yellow.ogg",
"danza_attack_06_yellow.ogg",
"danza_attack_07_yellow.ogg",
"danza_attack_08_yellow.ogg",
"danza_attack_09_yellow.ogg",
"danza_attack_10_yellow.ogg",
"danza_attack_finale_01_yellow.ogg",
"danza_attack_finale_02_yellow.ogg",
"danza_attack_finale_yellow.ogg",
"danza_attack_inst_01_yellow.ogg",
"danza_attack_inst_02_yellow.ogg",
"danza_attack_inst_03_yellow.ogg",
"danza_attack_inst_04_yellow.ogg",
"danza_attack_inst_05_yellow.ogg",
"danza_attack_inst_06_yellow.ogg",
"danza_attack_inst_07_yellow.ogg",
"danza_attack_inst_08_yellow.ogg",
"danza_attack_inst_09_yellow.ogg",
"danza_attack_inst_10_yellow.ogg",
"danza_attack_inst_finale_01_yellow.ogg",
"danza_attack_inst_finale_02_yellow.ogg",
"danza_battle_yellow.ogg",
"darkruins.ogg",
"deal_em_out_ace_yellow.ogg",
"deal_em_out_ed_yellow.ogg",
"deal_em_out_mooch_yellow.ogg",
"deal_em_out_moray_yellow.ogg",
"deal_em_out_yellow.ogg",
"decibat_yellow.ogg",
"delivery.ogg",
"delivery_intro.ogg",
"detainment.ogg",
"detour.ogg",
"doorclose.ogg",
"doorlock.ogg",
"dual.ogg",
"dual_short.ogg",
"dunes_cave.ogg",
"dunes_cave_outdoors.ogg",
"elevator.ogg",
"elevator_long.ogg",
"enter_axis.ogg",
"fall2.ogg",
"fallendownyellow.ogg",
"feisty.ogg",
"final_stand.ogg",
"flame_loop.ogg",
"flock_together.ogg",
"floweynew_yellow.ogg",
"flowey_final_boss_1_intro.ogg",
"flowey_final_boss_1_main.ogg",
"flowey_roof_intro_1.ogg",
"flowey_roof_intro_2.ogg",
"flowey_soundscape.ogg",
"flowey_world.ogg",
"funsized_yellow.ogg",
"f_laugh.ogg",
"f_newlaugh.ogg",
"f_phase2_clay.ogg",
"f_phase2_lowpoly.ogg",
"f_phase2_mechanical.ogg",
"f_phase2_organic.ogg",
"f_phase2_paper.ogg",
"f_phase2_yarn.ogg",
"game.unx",
"gameover_yellow.ogg",
"gemstone_fever.ogg",
"genobattle_yellow.ogg",
"getting_the_thoughts_out.ogg",
"gift_1.ogg",
"gift_2.ogg",
"gimme_ur_cash_yellow.ogg",
"golden_opportunity.ogg",
"gotcha.ogg",
"greenhouse.ogg",
"guardener_theme.ogg",
"gunshop.ogg",
"guns_blazing.ogg",
"guns_blazing_geno.ogg",
"happy_hour.ogg",
"heatwave_approaching.ogg",
"honest_days_work.ogg",
"honeydew_bark.ogg",
"honeydew_dalv.ogg",
"honeydew_lodge.ogg",
"honeydew_ruins.ogg",
"honeydew_snow.ogg",
"intro.ogg",
"intronoise.ogg",
"justice.ogg",
"kanako.ogg",
"kanako_reprise.ogg",
"lounging_around.ogg",
"mail_jingle_alt.ogg",
"manta_sail.ogg",
"martletbattle_yellow.ogg",
"mart_geno_wind_yellow.ogg",
"medium.ogg",
"menu_darkruins.ogg",
"menu_options.ogg",
"menu_ruins.ogg",
"menu_snowdin.ogg",
"menu_wild_east.ogg",
"mew.ogg",
"mew_boss.ogg",
"mew_intro.ogg",
"mew_logo.ogg",
"microsprings_froggits.ogg",
"micro_temperature.ogg",
"missing_inaction.ogg",
"mixin_it_up.ogg",
"mothers_love_intro.ogg",
"mothers_love_phase_1.ogg",
"mothers_love_phase_2.ogg",
"mothers_love_phase_3.ogg",
"mothers_love_phase_3_buildup.ogg",
"mothers_love_temp.ogg",
"mo_pop.ogg",
"nobodycame_yellow.ogg",
"nothing_but_the_truth.ogg",
"notsoquietstray.ogg",
"null.ogg",
"oasis.ogg",
"oasis_indoors.ogg",
"occupied_turf_yellow.ogg",
"ones_past.ogg",
"pinkgoo_move.ogg",
"pipin_hot_yellow.ogg",
"pops_deflate.ogg",
"prebattle1_yellow.ogg",
"prebattle2_yellow.ogg",
"prebattle3_yellow.ogg",
"quietstray.ogg",
"relaxation.ogg",
"remedy.ogg",
"renewed.ogg",
"ruins_yellow.ogg",
"sadlo.ogg",
"sandstorm.ogg",
"sheriffs_fate.ogg",
"shimmer.ogg",
"shop.ogg",
"showdown.ogg",
"shuffling1.ogg",
"shuffling2.ogg",
"shuffling3.ogg",
"snoring_justice.ogg",
"snow.ogg",
"snowdin_bridge.ogg",
"snowfall.ogg",
"some_point_of_no_return.ogg",
"soulmate_located.ogg",
"spook.ogg",
"starlo_entrance.ogg",
"steamworks_overworld.ogg",
"sunnyside_ranch.ogg",
"the_straw.ogg",
"the_trek.ogg",
"the_wandering.ogg",
"the_wild_east.ogg",
"the_wild_east_barn.ogg",
"the_wild_east_hospital.ogg",
"the_wild_east_house.ogg",
"the_wild_east_jail.ogg",
"the_wild_east_sleepy.ogg",
"through_the_macro_lens.ogg",
"train_trouble.ogg",
"train_trouble_2.ogg",
"trampled_flowers.ogg",
"trapdoor.ogg",
"treading_lightly.ogg",
"trial_by_fury.ogg",
"trial_by_fury_2.ogg",
"tucked_in.ogg",
"uhoh.ogg",
"undertale_oogloop.ogg",
"unforgiving.ogg",
"vigorous_terrain.ogg",
"vsasgore.ogg",
"well_be_okay.ogg",
"wild_east_shocking_sound.ogg",
"wind.ogg",
"wood_flowey.ogg",
"wood_pull.ogg",
"wood_zap.ogg"
];

self.addEventListener("fetch", (event) => {
  const should_cache = CACHE_FILES.some((f) => {
      return event.request.url.endsWith(f);
  });
  event.respondWith(
    caches.match(event.request).then((resp) => {
      return resp || fetch(event.request).then((response) => {
        return caches.open(CACHE_NAME).then((cache) => {
          if (should_cache) {
            cache.put(event.request, response.clone());
          }
          return response;
        });
      });
    })
  );
});

self.addEventListener("activate", (event) => {
  event.waitUntil(
    caches.keys().then((keys) => Promise.allSettled(
      keys.map((key) => {
        try {
          const data = JSON.parse(key);
          if (data && data["name"] && data.name == GAME_NAME &&
              data.version && data.version != GAME_VERSION) {
            return caches.delete(key);
          }
        } catch {
          return;
        }
      })
    )).then(() => {
    })
  );
});

self.addEventListener("activate", (event) => {
  event.waitUntil(self.clients.claim());
});
